[node]
node.call = K4DBZ-2
node.alias = DAVID2
node.locator = FM05rv
id.message = Terrestrial Amateur Radio Packet Network node ${node.alias} op is ${node.call}
id.interval = 60              ; Interval in seconds to broadcast an ID packet, 0 is off
node.info = Some info text \
            another line of info \
            Commands: Conn Bye Info Nodes Routes Ports Users MHeard Stats

[port:defaults]
port.enabled = true
port.quality = 255

kiss.slot.time=20             ; TODO implement these
kiss.tx.delay=0
kiss.tx.tail=1
kiss.persist=255
kiss.duplex=false

l2.rtt = 1000                   ; Time in milliseconds for round trip on this link
l2.response.delay = 30          ; (TODO) Time in milliseconds to delay before responding
l2.retry.count = 20             ; Maximum number of level 2 retries before giving up
l2.retry.timeout = 4000         ; Initial timeout in milliseconds for hearing an ack before we retry
l2.idle.timeout = 180000        ; (TODO) Idle link timeout in milliseconds, if we don't hear anything for this time, close the link

; A welcome message for level 2 connections
l2.connect.message = Welcome to David's TARPN node!

[port:1]
port.type=serial
port.description=RF link to RPI:K4DBZ-9 over LoRa
port.protocol=kiss            ; (KISS only) what wire protocol does this port use?

serial.device=/dev/tty.wchusbserial1410
serial.speed=9600

[port:2]
node.call = TEST-0            ; Example of overridding a value inherited from [nodes]
node.alias = Test             ; Example of overridding a value inherited from [nodes]

port.enabled=false
port.type=serial
port.description=PTY link
port.protocol=kiss

serial.device=/tmp/vmodem0
serial.speed=9600

[netrom]
netrom.ttl = 7                ; Initial value for TTL for outgoing NET/ROM packets
netrom.retry.count = 1        ; Default number of NET/ROM retries
netrom.retry.timeout = 180    ; Timeout for NET/ROm retries, in seconds
netrom.circuit.window = 2     ; Default NET/ROM window size
netrom.circuit.max = 128      ; Maximum number of NET/ROM circuits to allow
netrom.routes.max = 12        ; Maximum number of neighbors to keep
netrom.links.max = 20         ; Maximum number of L2 links

netrom.nodes.quality.min = 73 ; Minimum quality to add to nodes table
netrom.nodes.max = 200        ; Maximum size of the routing table
netrom.nodes.interval = 300   ; Interval in seconds to broadcast routing table (NODES destination)
netrom.obs.init = 6
netrom.obs.min = 4